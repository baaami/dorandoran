services:
  doran-gateway:
    build:
      context: ./services/gateway
    container_name: doran-gateway
    restart: always
    environment:
      REDIS_HOST: doran-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: admin
      RABBITMQ_HOST: doran-rabbitmq
    ports:
      - '2719:80'
    deploy:
      mode: replicated
      replicas: 1

  doran-match:
    build:
      context: ./services/match
    container_name: doran-match
    restart: always
    environment:
      REDIS_HOST: doran-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: admin
      RABBITMQ_HOST: doran-rabbitmq
    ports:
      - '2720:80'
    deploy:
      mode: replicated
      replicas: 1

  doran-game:
    build:
      context: ./services/game
    container_name: doran-game
    restart: always
    environment:
      REDIS_HOST: doran-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: admin
      MONGO_HOST: doran-mongo
      RABBITMQ_HOST: doran-rabbitmq
    ports:
      - '2721:80'
    deploy:
      mode: replicated
      replicas: 1

  doran-user:
    build:
      context: ./services/user
    container_name: doran-user
    restart: always
    environment:
      MYSQL_HOST: doran-mysql
      RABBITMQ_HOST: doran-rabbitmq
    deploy:
      mode: replicated
      replicas: 1

  doran-chat:
    build:
      context: ./services/chat
    container_name: doran-chat
    restart: always
    environment:
      REDIS_HOST: doran-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: admin
      MONGO_HOST: doran-mongo
      RABBITMQ_HOST: doran-rabbitmq
    deploy:
      mode: replicated
      replicas: 1

  doran-auth:
    build:
      context: ./services/auth
    container_name: doran-auth
    restart: always
    environment:
      REDIS_HOST: doran-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: admin
      RABBITMQ_HOST: doran-rabbitmq
    deploy:
      mode: replicated
      replicas: 1

  doran-push:
    build:
      context: ./services/push
    container_name: doran-push
    restart: always
    environment:
      ONESIGNAL_APP_ID: ${ONESIGNAL_APP_ID}
      ONESIGNAL_API_KEY: ${ONESIGNAL_API_KEY}
      MYSQL_HOST: doran-mysql
      RABBITMQ_HOST: doran-rabbitmq
    deploy:
      mode: replicated
      replicas: 1

  doran-logger:
    build:
      context: ./services/logger
    container_name: doran-logger
    restart: always
    environment:
      RABBITMQ_HOST: doran-rabbitmq
      MONGO_HOST: doran-mongo
    deploy:
      mode: replicated
      replicas: 1

  doran-mysql:
    image: mysql:8
    container_name: doran-mysql
    restart: always
    environment:
      MYSQL_DATABASE: users
      MYSQL_ROOT_PASSWORD: sample
    ports:
      - '3306:3306'
    deploy:
      mode: replicated
      replicas: 1
    # volumes:
    #   - ./db-data/mysql/:/var/lib/mysql/

  doran-mongo:
    image: 'mongo:4.2.16-bionic'
    container_name: doran-mongo
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: sample

  doran-rabbitmq:
    image: 'rabbitmq:3.9-management-alpine'
    container_name: doran-rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672' # RabbitMQ Management Plugin 포트
    deploy:
      mode: replicated
      replicas: 1
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/

  doran-redis:
    image: redis:alpine
    container_name: doran-redis
    restart: always
    environment:
      REDIS_PASSWORD: admin
    ports:
      - '6379:6379'
    command:
      [
        'redis-server',
        '--requirepass',
        'admin',
        '--save',
        '', # RDB 영속성 비활성화
        '--appendonly',
        'no'
      ] # AOF 영속성 비활성화
    # volumes:
    #   - ./db-data/redis:/data # Redis 데이터 저장소 마운트
